#include <iostream>
#include <cstdio>
#include <string>
#include <string.h>
#include <stdio.h>
#include <algorithm>
#include <functional>
#include <cstring>
#include <vector>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <cmath>
#include <climits>
#include <iomanip>
#include <math.h>
#include <set>
 
using namespace std;
struct node
{
    int left;
    int right;
};
typedef long long ll;
const int INF = 987654321;
vector< node > arr;
int n;
int num = 1;
vector<vector < int > >  ans;
void solution(int height,int cur)//높이,현재위치
{
    if (cur == -1)
        return;
    solution(height + 1, arr[cur].left);
    ans[height].push_back(num);
    num++;
    solution(height + 1, arr[cur].right);
}
int main() {
#ifdef _CONSOLE
    freopen("input.txt", "r", stdin);
#endif
    scanf("%d", &n);
    arr.resize(n + 1);
    ans.resize(n + 1);
    vector<bool> parentcheck(n + 1);
    for (int i = 0; i < n; i++)
    {
        int a, b, c;
        scanf("%d%d%d", &a, &b, &c);
        arr[a].left = b;
        arr[a].right = c;
        if (b != -1)    parentcheck[b] = true;
        if (c != -1)    parentcheck[c] = true;
    }
    int rootnum;//루트의 번호가 무조건 1번이 아니므로 찾아줘야함.
    for (int i = 1; i <= n; i++)
    {
        if (parentcheck[i] == false)
        {
            rootnum = i;
            break;
        }
    }
    solution(1, rootnum);
    int maxx = 0;
    int maxxheight = 1;
    for (int i = 1; i <= n; i++)
    {
        if (ans[i].size() == 0)
            continue;
        sort(ans[i].begin(), ans[i].end());
        int tmp = ans[i][ans[i].size() - 1] - ans[i][0]+1;
        if (maxx < tmp)
        {
            maxxheight = i;
            maxx = tmp;
        }
    }
    printf("%d %d\n", maxxheight, maxx);
}
