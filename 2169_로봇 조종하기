#include <iostream>
#include <cstdio>
#include <string>
#include <string.h>
#include <stdio.h>
#include <algorithm>
#include <functional>
#include <cstring>
#include <vector>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <cmath>
#include <climits>
#include <math.h>
#include <set>
 
using namespace std;
typedef long long ll;
const int INF = 987654321;
const int MOD = 1000000;
 
int n, m;
int arr[1001][1001];
int dp[1001][1001][3];
 
int dx[3] = {1,0,0};
int dy[3] = {0,1,-1};
 
int solution(int x, int y,int direct)
{
    if (x == n - 1 && y == m - 1)
        return arr[x][y];
    int& ret = dp[x][y][direct];
    if (ret != -1)  return ret;
    ret = -987654321;
    for (int i = 0; i < 3; i++)
    {
        if (direct*i == 2)  continue;
        int nextX = x + dx[i];
        int nextY = y + dy[i];
        if (nextX >= n || nextY < 0 || nextY >= m) continue;
        ret = max(ret, solution(nextX, nextY,i) + arr[x][y]);
    }
    return ret;
}
int main()
{
#ifdef _CONSOLE
    freopen( "input.txt", "r", stdin);
#endif
    memset(dp, -1, sizeof(dp));
    scanf("%d%d", &n, &m);
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            scanf("%d", &arr[i][j]);
     
    printf("%d\n", solution(0, 0, 0));
}
