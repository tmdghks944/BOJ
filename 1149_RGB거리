#include <iostream>
#include <cstdio>
#include <string>
#include <string.h>
#include <stdio.h>
#include <algorithm>
#include <functional>
#include <cstring>
#include <climits>
#include <vector>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <cmath>
#include <set>
 
typedef long long ll;
using namespace std;
 
typedef long long ll;
int T;
int arr[1011][3];
int dp[1011][3];
int solution(int color,int pos)
{
    if (pos == T - 1)
        return arr[pos][color];
    else if (pos > T - 1)
        return 0;
    int &ret = dp[pos][color];
    if (ret != -1)  return ret;
    ret = arr[pos][color];
    if (color == 0)
        ret = min(solution(1, pos + 1)+arr[pos][0], solution(2, pos + 1)+arr[pos][0]);
    else if (color == 1)
        ret = min(solution(0, pos + 1)+arr[pos][1], solution(2, pos + 1)+arr[pos][1]);
    else if (color == 2)
        ret = min(solution(0, pos + 1)+arr[pos][2], solution(1, pos + 1)+arr[pos][2]);
    return ret;
}
int main()
{
#ifdef _CONSOLE
    freopen("input.txt", "r", stdin);
#endif
    memset(dp, -1, sizeof(dp));
    scanf("%d", &T);
    for (int i = 0; i < T; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            scanf("%d", &arr[i][j]);
        }
    }
    int n1 = solution(0, 0);
    int n2 = solution(1, 0);
    int n3 = solution(2, 0);
    cout << min(n1, min(n2, n3)) << endl;
     
}
