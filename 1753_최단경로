#include <iostream>
#include <cstdio>
#include <string>
#include <string.h>
#include <stdio.h>
#include <algorithm>
#include <functional>
#include <cstring>
#include <climits>
#include <vector>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <set>
using namespace std;
typedef long long ll;
const int INF = 987654321;
vector<pair<int, int>> arr[20001];
int n, m;
vector<int> dijkstra(int s)
{
    vector<int> dist(n + 1, INF);
    priority_queue<pair<int, int>> pq;
    dist[s] = 0;
    pq.push({ 0,s });
    while (!pq.empty())
    {
        int here = pq.top().second;
        int cost = -pq.top().first;
        pq.pop();
        if (dist[here] < cost)continue;
        for (int i = 0; i < arr[here].size(); i++)
        {
            int there = arr[here][i].first;
            int nextcost = cost + arr[here][i].second;
            if (dist[there] > nextcost)
            {
                dist[there] = nextcost;
                pq.push({ -nextcost,there });
            }
        }
    }
    return dist;
}
int main()
{
#ifdef _CONSOLE
    freopen("input.txt", "r", stdin);
#endif
    int start;
    scanf("%d%d%d", &n, &m, &start);
    while (m--)
    {
        int u, v, w;
        scanf("%d%d%d", &u, &v, &w);
        arr[u].push_back({ v,w });
    }
    vector<int> ans = dijkstra(start);
    for (int i = 1; i <= n; i++)
    {
        if (ans[i] != INF)
            cout << ans[i] << endl;
        else
            cout << "INF" << endl;
    }
}
