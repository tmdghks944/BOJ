#include <iostream>
#include <string>
#include <cstdio>
#include <algorithm>
#include <string.h>
#include <vector>
#include <set>
#include <iomanip>
#include <functional>
struct shark
{
    int size;
    int speed;
    int smart;
};
using namespace std;
typedef long long ll;
bool arr[1001][1001];
bool ismatched[1001][1001];
vector<int> amatch;
vector<int> bmatch;
vector<bool> visited;
int n;
bool dfs(int a)
{
    if (visited[a])
        return false;
    visited[a] = true;
    for (int b = 1; b <= n; b++)
    {
        if (arr[a][b])
        {
            if (bmatch[b] == -1 || dfs(bmatch[b]))
            {
                amatch[a] = b;
                bmatch[b] = a;
                return true;
            }
        }
    }
    return false;
}
int bimatch()
{
    amatch = vector<int>(n + 1, -1);
    bmatch = vector<int>(n + 1, -1);
    int ans = 0;
    for (int j = 0; j < 2; j++)
    {
        for (int start = 1; start <= n; start++)
        {
            visited = vector<bool>(n + 1, false);
            if (dfs(start))
                ans++;
        }
    }
    return ans;
}
 
int main(void)
{
#ifdef _CONSOLE
    freopen("input.txt", "r", stdin);
#endif
    scanf("%d", &n);
    shark shk[1001];
    for (int i = 1; i <= n; i++)
        scanf("%d%d%d", &shk[i].size, &shk[i].speed, &shk[i].smart);
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            if (i == j) continue;
            if (shk[i].size >= shk[j].size && shk[i].speed >= shk[j].speed && shk[i].smart >= shk[j].smart && !ismatched[i][j] && !ismatched[j][i])
            {
                arr[i][j] = true;
            }
            if (shk[i].size == shk[j].size && shk[i].speed == shk[j].speed && shk[i].smart == shk[j].smart)
            {
                ismatched[i][j] = true;
                ismatched[j][i] = true;
            }
        }
    }
    cout << n - bimatch() << endl;
}
