#include <iostream>
#include <cstdio>
#include <string>
#include <string.h>
#include <stdio.h>
#include <algorithm>
#include <functional>
#include <cstring>
#include <vector>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <cmath>
#include <climits>
#include <math.h>
#include <set>
 
using namespace std;
const int INF = 987654321;
const int MOD = 9901;
typedef long long ll;
int n, m;
int parent[100001];
int  depth[100001];
bool visited[100001];
vector<vector<int>> arr;
void dfs(int here)
{
    visited[here] = true;
    for (int i = 0; i < arr[here].size(); i++)
    {
        int there = arr[here][i];
        if (visited[there])continue;
        depth[there] = depth[here] + 1;
        parent[there] = here;
        dfs(there);
    }
}
int lca(int x, int y)
{
    if (depth[x] < depth[y])swap(x, y);
    while (depth[x] != depth[y])x = parent[x];
    while (x != y)x = parent[x], y = parent[y];
    return x;
}
int main() {
#ifdef _CONSOLE
    freopen("input.txt", "r", stdin);
#endif
    scanf("%d", &n);
    arr.resize(n + 1);
    int u, v;
    for (int i = 0; i < n-1; i++)
    {
        scanf("%d%d", &u, &v);
        arr[u].push_back(v);
        arr[v].push_back(u);
    }
    dfs(1);
    scanf("%d", &m);
    for (int i = 0; i < m; i++)
    {
        scanf("%d%d", &u, &v);
        printf("%d\n", lca(u, v));
    }
}
