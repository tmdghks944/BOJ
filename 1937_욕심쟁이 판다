#include <iostream>
#include <cstdio>
#include <string>
#include <string.h>
#include <stdio.h>
#include <algorithm>
#include <functional>
#include <cstring>
#include <climits>
#include <vector>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <cmath>
#include <set>
 
using namespace std;
 
int n;
int arr[502][502];
int dp[502][502];
int dx[4] = { -1,0,1,0 };//상우하좌
int dy[4] = { 0,1,0,-1 };
int solution(int a, int b)
{
    if (arr[a][b] > arr[a + 1][b] && arr[a][b] > arr[a - 1][b] &&
        arr[a][b] > arr[a][b + 1] && arr[a][b] > arr[a][b - 1])//더이상 이동할곳이 없을때
        return 0;
    int &ret = dp[a][b];
    if (ret != -1)  return ret;
    ret = 0;
    for (int i = 0; i < 4; i++)
    {
        int nextX = a + dx[i];
        int nextY = b + dy[i];
        if (arr[a][b] < arr[nextX][nextY])
            ret = max(ret, solution(nextX, nextY) + 1);
    }
    return ret;
}
int main()
{
#ifdef _CONSOLE
    freopen("input.txt", "r", stdin);
#endif
    memset(dp, -1, sizeof(dp));
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            scanf("%d", &arr[i][j]);
    int maxx = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            maxx = max(maxx, solution(i, j));
        }
    }
    printf("%d\n", maxx+1);
    return 0;
}
