#include <iostream>
#include <cstdio>
#include <string>
#include <string.h>
#include <stdio.h>
#include <algorithm>
#include <functional>
#include <cstring>
#include <vector>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <cmath>
#include <climits>
#include <math.h>
#include <set>
 
using namespace std;
const int INF = 987654321;
int n;
int arr[2][100001];
int dp[2][100001];
 
int maxmax(int a, int b, int c, int d)
{
    return max(a, max(b, max(c, d)));
}
int solution(int curDepth, int curPos)
{
    if (curPos == n-1)
        return arr[curDepth][curPos];
    else if (curPos > n-1)
        return -INF;
    int& ret = dp[curDepth][curPos];
    if (ret != -1)  return ret;
    ret = 0;
    ret = maxmax(ret, solution(curDepth, curPos + 2) + arr[curDepth][curPos],
        solution((curDepth + 1) % 2, curPos + 1) + arr[curDepth][curPos],
        solution((curDepth + 1) % 2, curPos + 2) + arr[curDepth][curPos]);
    return ret;
}
int main()
{
#ifdef _CONSOLE
    freopen("input.txt", "r", stdin);
#endif
    int T;
    scanf("%d", &T);
    while (T--)
    {
        memset(dp, -1, sizeof(dp));
        scanf("%d\n", &n);
        for (int i = 0; i < 2; i++)
            for (int j = 0; j < n; j++)
                scanf("%d", &arr[i][j]);
        printf("%d\n", max(solution(0, 0), solution(1, 0)));
    }
}
